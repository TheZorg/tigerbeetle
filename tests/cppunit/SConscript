# author: Francois Doray <francois.pierre-doray@polymtl.ca>


import os.path


Import(['root_env'])

target = 'testall'

libs = [
    'tibeecommon',
    'cppunit',
]

common_sources = [
    'pipeline/MakeBackInserterSinkTest.cpp',
    'pipeline/MakeMultiSinkTest.cpp',
    'pipeline/MultiSinkTest.cpp',
    'quark/QuarkDatabaseTest.cpp',
    'state/Uint32StateValueTest.cpp',
]

sources = [
    'main.cpp',
]

subs = [
    ('common', common_sources),
]

for base, files in subs:
    sources += [os.path.join('tests', base, f) for f in files]

env = root_env.Clone()
env.Append(CPPPATH='#/src')
env.Append(CPPPATH='#/tests')

testall = env.Program(target=target, source=sources, LIBS=libs,
                      LIBPATH='#/src/common')

Return('testall')
